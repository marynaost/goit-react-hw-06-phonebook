(this["webpackJsonpgoit-react-hw-06-phonebook"]=this["webpackJsonpgoit-react-hw-06-phonebook"]||[]).push([[0],{10:function(t,e,n){t.exports={item:"ContactList_item__3P-Em",noContacts:"ContactList_noContacts__3PpYM",list:"ContactList_list__2Qgns",button:"ContactList_button__2t-vC"}},16:function(t,e,n){t.exports={label:"Filter_label__1Dg_S",input:"Filter_input__3s5t3"}},42:function(t,e,n){},43:function(t,e,n){},45:function(t,e,n){"use strict";n.r(e);var a,c=n(0),r=n.n(c),o=n(12),s=n.n(o),i=n(3),l=n(19),b=n(4),u=n(5),d=n(20),j=n.n(d),m=n(21),h=n.n(m),p=n(7),O=n(22),f=n(2),x=n(9),C=n.n(x),_={addContact:Object(b.b)("contacts/add",(function(t){var e=t.name,n=t.number;return{payload:{id:C.a.generate(),name:e,number:n}}})),deleteContacts:Object(b.b)("contacts/delete"),changeFilter:Object(b.b)("contact/changeFilter")},g=Object(b.c)([],(a={},Object(p.a)(a,_.addContact,(function(t,e){var n=e.payload;return[].concat(Object(O.a)(t),[n])})),Object(p.a)(a,_.deleteContacts,(function(t,e){var n=e.payload;return t.filter((function(t){return t.id!==n}))})),a)),v=Object(b.c)("",Object(p.a)({},_.changeFilter,(function(t,e){return e.payload}))),y=Object(f.b)({items:g,filter:v}),N={key:"contacts",storage:j.a,blacklist:["filter"]},F=Object(b.a)({reducer:{contacts:Object(u.g)(N,y)},middleware:function(t){return t({serializableCheck:{ignoredActions:[u.a,u.f,u.b,u.c,u.d,u.e]}}).concat(h.a)},devTools:!1}),k=Object(u.h)(F),A=(n(41),n(42),n(43),n(17)),w=function(t){return t.contacts.items},z=function(t){return t.contacts.filter},L=function(t){var e=w(t),n=z(t).toLowerCase();return e.filter((function(t){return t.name.toLowerCase().includes(n)}))},Z=n(6),M=n.n(Z),P=n(1);function S(){var t=Object(c.useState)(""),e=Object(A.a)(t,2),n=e[0],a=e[1],r=Object(c.useState)(""),o=Object(A.a)(r,2),s=o[0],l=o[1],b=Object(i.c)(w),u=Object(i.b)(),d=C.a.generate(),j=C.a.generate(),m=function(t){var e=t.target,n=e.name,c=e.value;switch(n){case"name":a(c);break;case"number":l(c);break;default:return}},h=function(){var t={name:n,number:s};b.find((function(e){return t.name.toLowerCase()===e.name.toLowerCase()}))?alert("".concat(t.name," is already in contacts")):u(_.addContact(t))},p=function(){a(""),l("")};return Object(P.jsxs)("form",{className:M.a.form,onSubmit:function(t){t.preventDefault(),h(),p()},children:[Object(P.jsxs)("label",{className:M.a.label,htmlFor:d,children:["Name",Object(P.jsx)("input",{className:M.a.input,type:"text",name:"name",value:n,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,onChange:m,id:d})]}),Object(P.jsxs)("label",{className:M.a.label,htmlFor:j,children:["Number",Object(P.jsx)("input",{className:M.a.input,type:"tel",name:"number",value:s,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,onChange:m,id:j})]}),Object(P.jsx)("button",{className:M.a.button,type:"submit",children:"Add contact"})]})}var J=n(10),B=n.n(J);var D=function(){var t=Object(i.c)(L),e=Object(i.b)();return 0===t.length?Object(P.jsx)("div",{className:B.a.noContacts,children:"You haven't contacts!"}):Object(P.jsx)("ul",{className:B.a.item,children:t.map((function(t){return Object(P.jsxs)("li",{className:B.a.list,children:[Object(P.jsxs)("span",{children:[t.name,": ",t.number]}),Object(P.jsx)("button",{className:B.a.button,type:"button",onClick:function(){return n=t.id,e(_.deleteContacts(n));var n},children:"Delete"})]},t.id)}))})},Y=n(16),q=n.n(Y);var E=function(){var t=Object(i.c)(z),e=Object(i.b)();return Object(P.jsx)(P.Fragment,{children:Object(P.jsxs)("label",{className:q.a.label,children:["Find contact by name",Object(P.jsx)("input",{className:q.a.input,type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",value:t,onChange:function(t){return e(_.changeFilter(t.target.value))}})]})})};function $(){return Object(P.jsxs)("div",{className:"container",children:[Object(P.jsx)("h1",{children:"Phonebook"}),Object(P.jsx)(S,{}),Object(P.jsx)("h2",{children:"Contacts"}),Object(P.jsx)(E,{}),Object(P.jsx)(D,{})]})}s.a.render(Object(P.jsx)(r.a.StrictMode,{children:Object(P.jsx)(i.a,{store:F,children:Object(P.jsx)(l.a,{loading:null,persistor:k,children:Object(P.jsx)($,{})})})}),document.getElementById("root"))},6:function(t,e,n){t.exports={form:"ContactForm_form__1oklo",label:"ContactForm_label__1o0xp",input:"ContactForm_input__3l4gM",button:"ContactForm_button__29PYt"}}},[[45,1,2]]]);
//# sourceMappingURL=main.cda37acd.chunk.js.map